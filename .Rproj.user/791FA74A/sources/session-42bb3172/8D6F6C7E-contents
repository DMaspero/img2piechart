library(imager)
library(ggplot2)
library(scatterpie)
library(dplyr)
library(tidyr)
library(progress)


### PARAMETERS ###
ImageFN <- "imgs/bird.jpg"
nColors = 10 #number of colors
diameter = 50 #square side (pixel)

IMG <- load.image(file = ImageFN)
plot(IMG)

pixelInfo <- data.frame(matrix(data = NA,
                               nrow = (dim(IMG)[1]*dim(IMG)[2]),
                               ncol = 6))
colnames(pixelInfo) <- c("idx","x","y", "R", "G", "B")

pixelInfo$R <- as.vector(R(IMG))
pixelInfo$G <- as.vector(G(IMG))
pixelInfo$B <- as.vector(B(IMG))

pixelInfo$idx <- 1:(dim(IMG)[1]*dim(IMG)[2])

pixelInfo$x <- ((pixelInfo$idx-1) %% dim(IMG)[1]) + 1
pixelInfo$y <- floor((pixelInfo$idx-1) / dim(IMG)[1]) + 1

ColorCluster <- kmeans(pixelInfo[,c("R","G","B")], nColors, nstart = 1)

pixelInfo$cluster <- ColorCluster$cluster

R(IMG)[,,1,1] <- matrix(data = ColorCluster$centers[ColorCluster$cluster,"R"],
                        nrow = dim(IMG)[1])
G(IMG)[,,1,1] <- matrix(data = ColorCluster$centers[ColorCluster$cluster,"G"],
                        nrow = dim(IMG)[1])
B(IMG)[,,1,1] <- matrix(data = ColorCluster$centers[ColorCluster$cluster,"B"],
                        nrow = dim(IMG)[1])

plot(IMG)

pixelInfo$binN <- ceiling(pixelInfo$x/diameter) + (floor(pixelInfo$y / diameter) * ceiling(max(pixelInfo$x) / diameter))

binInfoA <- pixelInfo %>%
                      group_by(binN) %>%
                      count(cluster) %>%
                      pivot_wider(names_from = cluster,
                                  values_from = n,
                                  names_sort = TRUE,
                                  values_fill = 0)
binInfoB <- pixelInfo %>% group_by(binN) %>% summarise_at(vars(x,y), list(name = mean))
#Fix bottom and right lines
# right
mR <- max(binInfoB$x_name)
mR2 <- max(binInfoB$x_name[binInfoB$x_name < mR])
binInfoB$x_name[binInfoB$x_name == mR] <- (mR2 + diameter)
# bottom
mR <- max(binInfoB$y_name)
mR2 <- max(binInfoB$y_name[binInfoB$y_name < mR])
binInfoB$y_name[binInfoB$y_name == mR] <- (mR2 + diameter)

binInfoM <- merge(binInfoA,binInfoB, by = "binN")

# Pie charts
colorList <- rgb(ColorCluster$centers)
names(colorList) <- as.character(1:nColors)

pdf(file = paste0("pieDiam_", diameter, "_nColor_", nColors,"_", tools::file_path_sans_ext(ImageFN), "realColors.pdf"))
ggplot() +
  geom_scatterpie(aes(x=x_name, y=y_name, group=binN, r = (diameter/2)),
                  data=binInfoM,
                  cols = as.character(1:nColors),
                  color=NA) +
  scale_fill_manual(values = colorList, "Colors") +
  coord_equal() +
  scale_y_reverse() +
  theme_void()
dev.off()

